import {Provider} from "@pulumi/aws";

export const LOCALSTACK_ENDPOINT = process.env.LOCALSTACK_ENDPOINT as string;
//const LOCAL_STACK_ENDPOINT = 'http://host.docker.internal:8082';

export const awsProvider = new Provider("localstack", {
    skipCredentialsValidation: true,
    skipMetadataApiCheck: true,
    skipRequestingAccountId: true,

    s3ForcePathStyle: true,
    accessKey: 'test',
    secretKey: 'test',
    region: 'us-east-1',
    // list of supported features
    // https://docs.localstack.cloud/aws/feature-coverage/
    // list of feature status
    // https://app.localstack.cloud/status
    endpoints: [{
        // accessanalyzer: hostEndpoint,
        // account: hostEndpoint,
        acm: LOCALSTACK_ENDPOINT,
        // acmpca: hostEndpoint,
        // alexaforbusiness: hostEndpoint,
        // amp: hostEndpoint,
        amplify: LOCALSTACK_ENDPOINT,
        // amplifybackend: hostEndpoint,
        apigateway: LOCALSTACK_ENDPOINT,
        apigatewayv2: LOCALSTACK_ENDPOINT,
        // appautoscaling: hostEndpoint,
        appconfig: LOCALSTACK_ENDPOINT,
        // appflow: hostEndpoint,
        // appintegrations: hostEndpoint,
        // appintegrationsservice: hostEndpoint,
        applicationautoscaling: LOCALSTACK_ENDPOINT,
        // applicationcostprofiler: hostEndpoint,
        // applicationdiscovery: hostEndpoint,
        // applicationdiscoveryservice: hostEndpoint,
        // applicationinsights: hostEndpoint,
        // appmesh: hostEndpoint,
        // appregistry: hostEndpoint,
        // apprunner: hostEndpoint,
        // appstream: hostEndpoint,
        appsync: LOCALSTACK_ENDPOINT,
        athena: LOCALSTACK_ENDPOINT,
        // auditmanager: hostEndpoint,
        // augmentedairuntime: hostEndpoint,
        // autoscaling: hostEndpoint,
        // autoscalingplans: hostEndpoint,
        backup: LOCALSTACK_ENDPOINT,
        batch: LOCALSTACK_ENDPOINT,
        // braket: hostEndpoint,
        // budgets: hostEndpoint,
        // chime: hostEndpoint,
        // cloud9: hostEndpoint,
        // cloudcontrol: hostEndpoint,
        // cloudcontrolapi: hostEndpoint,
        // clouddirectory: hostEndpoint,
        cloudformation: LOCALSTACK_ENDPOINT,
        cloudfront: LOCALSTACK_ENDPOINT,
        // cloudhsm: hostEndpoint,
        // cloudhsmv2: hostEndpoint,
        // cloudsearch: hostEndpoint,
        // cloudsearchdomain: hostEndpoint,
        cloudtrail: LOCALSTACK_ENDPOINT,
        cloudwatch: LOCALSTACK_ENDPOINT,
        // cloudwatchevents: hostEndpoint,
        cloudwatchlogs: LOCALSTACK_ENDPOINT,
        // codeartifact: hostEndpoint,
        // codebuild: hostEndpoint,
        codecommit: LOCALSTACK_ENDPOINT,
        // codedeploy: hostEndpoint,
        // codeguruprofiler: hostEndpoint,
        // codegurureviewer: hostEndpoint,
        // codepipeline: hostEndpoint,
        // codestar: hostEndpoint,
        // codestarconnections: hostEndpoint,
        // codestarnotifications: hostEndpoint,
        cognitoidentity: LOCALSTACK_ENDPOINT,
        // cognitoidentityprovider: hostEndpoint,
        cognitoidp: LOCALSTACK_ENDPOINT,
        // cognitosync: hostEndpoint,
        // comprehend: hostEndpoint,
        // comprehendmedical: hostEndpoint,
        // config: hostEndpoint,
        // configservice: hostEndpoint,
        // connect: hostEndpoint,
        // connectcontactlens: hostEndpoint,
        // connectparticipant: hostEndpoint,
        // costandusagereportservice: hostEndpoint,
        // costexplorer: hostEndpoint,
        // cur: hostEndpoint,
        // databasemigration: hostEndpoint,
        // databasemigrationservice: hostEndpoint,
        // dataexchange: hostEndpoint,
        // datapipeline: hostEndpoint,
        // datasync: hostEndpoint,
        // dax: hostEndpoint,
        // detective: hostEndpoint,
        // devicefarm: hostEndpoint,
        // devopsguru: hostEndpoint,
        // directconnect: hostEndpoint,
        // dlm: hostEndpoint,
        // dms: hostEndpoint,
        docdb: LOCALSTACK_ENDPOINT,
        // ds: hostEndpoint,
        dynamodb: LOCALSTACK_ENDPOINT,
        dynamodbstreams: LOCALSTACK_ENDPOINT,
        ec2: LOCALSTACK_ENDPOINT,
        // ec2instanceconnect: hostEndpoint,
        ecr: LOCALSTACK_ENDPOINT,
        // ecrpublic: hostEndpoint,
        ecs: LOCALSTACK_ENDPOINT,
        efs: LOCALSTACK_ENDPOINT,
        eks: LOCALSTACK_ENDPOINT,
        elasticache: LOCALSTACK_ENDPOINT,
        elasticbeanstalk: LOCALSTACK_ENDPOINT,
        // elasticinference: hostEndpoint,
        // elasticsearch: hostEndpoint,
        elasticsearchservice: LOCALSTACK_ENDPOINT,
        // elastictranscoder: hostEndpoint,
        elb: LOCALSTACK_ENDPOINT,
        elbv2: LOCALSTACK_ENDPOINT,
        emr: LOCALSTACK_ENDPOINT,
        // emrcontainers: hostEndpoint,
        // es: hostEndpoint,
        eventbridge: LOCALSTACK_ENDPOINT,
        // events: hostEndpoint,
        // finspace: hostEndpoint,
        // finspacedata: hostEndpoint,
        firehose: LOCALSTACK_ENDPOINT,
        // fis: hostEndpoint,
        // fms: hostEndpoint,
        // forecast: hostEndpoint,
        // forecastquery: hostEndpoint,
        // forecastqueryservice: hostEndpoint,
        // forecastservice: hostEndpoint,
        // frauddetector: hostEndpoint,
        // fsx: hostEndpoint,
        // gamelift: hostEndpoint,
        glacier: LOCALSTACK_ENDPOINT,
        // globalaccelerator: hostEndpoint,
        glue: LOCALSTACK_ENDPOINT,
        // gluedatabrew: hostEndpoint,
        // greengrass: hostEndpoint,
        // greengrassv2: hostEndpoint,
        // groundstation: hostEndpoint,
        // guardduty: hostEndpoint,
        // health: hostEndpoint,
        // healthlake: hostEndpoint,
        // honeycode: hostEndpoint,
        iam: LOCALSTACK_ENDPOINT,
        // identitystore: hostEndpoint,
        // imagebuilder: hostEndpoint,
        // inspector: hostEndpoint,
        iot: LOCALSTACK_ENDPOINT,
        // iot1clickdevices: hostEndpoint,
        // iot1clickdevicesservice: hostEndpoint,
        // iot1clickprojects: hostEndpoint,
        iotanalytics: LOCALSTACK_ENDPOINT,
        // iotdataplane: hostEndpoint,
        // iotdeviceadvisor: hostEndpoint,
        // iotevents: hostEndpoint,
        // ioteventsdata: hostEndpoint,
        // iotfleethub: hostEndpoint,
        // iotjobsdataplane: hostEndpoint,
        // iotsecuretunneling: hostEndpoint,
        // iotsitewise: hostEndpoint,
        // iotthingsgraph: hostEndpoint,
        // iotwireless: hostEndpoint,
        kafka: LOCALSTACK_ENDPOINT,
        // kendra: hostEndpoint,
        kinesis: LOCALSTACK_ENDPOINT,
        kinesisanalytics: LOCALSTACK_ENDPOINT,
        // kinesisanalyticsv2: hostEndpoint,
        // kinesisvideo: hostEndpoint,
        // kinesisvideoarchivedmedia: hostEndpoint,
        // kinesisvideomedia: hostEndpoint,
        // kinesisvideosignalingchannels: hostEndpoint,
        kms: LOCALSTACK_ENDPOINT,
        lakeformation: LOCALSTACK_ENDPOINT,
        lambda: LOCALSTACK_ENDPOINT,
        // lexmodelbuilding: hostEndpoint,
        // lexmodelbuildingservice: hostEndpoint,
        // lexmodels: hostEndpoint,
        // lexmodelsv2: hostEndpoint,
        // lexruntime: hostEndpoint,
        // lexruntimeservice: hostEndpoint,
        // lexruntimev2: hostEndpoint,
        // licensemanager: hostEndpoint,
        // lightsail: hostEndpoint,
        // location: hostEndpoint,
        // lookoutequipment: hostEndpoint,
        // lookoutforvision: hostEndpoint,
        // lookoutmetrics: hostEndpoint,
        // machinelearning: hostEndpoint,
        // macie: hostEndpoint,
        // macie2: hostEndpoint,
        // managedblockchain: hostEndpoint,
        // marketplacecatalog: hostEndpoint,
        // marketplacecommerceanalytics: hostEndpoint,
        // marketplaceentitlement: hostEndpoint,
        // marketplaceentitlementservice: hostEndpoint,
        // marketplacemetering: hostEndpoint,
        // mediaconnect: hostEndpoint,
        // mediaconvert: hostEndpoint,
        // medialive: hostEndpoint,
        // mediapackage: hostEndpoint,
        // mediapackagevod: hostEndpoint,
        mediastore: LOCALSTACK_ENDPOINT,
        // mediastoredata: hostEndpoint,
        // mediatailor: hostEndpoint,
        // memorydb: hostEndpoint,
        // mgn: hostEndpoint,
        // migrationhub: hostEndpoint,
        // migrationhubconfig: hostEndpoint,
        // mobile: hostEndpoint,
        // mobileanalytics: hostEndpoint,
        // mq: hostEndpoint,
        // mturk: hostEndpoint,
        // mwaa: hostEndpoint,
        neptune: LOCALSTACK_ENDPOINT,
        // networkfirewall: hostEndpoint,
        // networkmanager: hostEndpoint,
        // nimblestudio: hostEndpoint,
        // opsworks: hostEndpoint,
        // opsworkscm: hostEndpoint,
        organizations: LOCALSTACK_ENDPOINT,
        // outposts: hostEndpoint,
        // personalize: hostEndpoint,
        // personalizeevents: hostEndpoint,
        // personalizeruntime: hostEndpoint,
        // pi: hostEndpoint,
        // pinpoint: hostEndpoint,
        // pinpointemail: hostEndpoint,
        // pinpointsmsvoice: hostEndpoint,
        // polly: hostEndpoint,
        // pricing: hostEndpoint,
        // prometheus: hostEndpoint,
        // prometheusservice: hostEndpoint,
        // proton: hostEndpoint,
        qldb: LOCALSTACK_ENDPOINT,
        // qldbsession: hostEndpoint,
        // quicksight: hostEndpoint,
        // ram: hostEndpoint,
        rds: LOCALSTACK_ENDPOINT,
        rdsdata: LOCALSTACK_ENDPOINT,
        // rdsdataservice: hostEndpoint,
        redshift: LOCALSTACK_ENDPOINT,
        redshiftdata: LOCALSTACK_ENDPOINT,
        // rekognition: hostEndpoint,
        // resourcegroups: hostEndpoint,
        // resourcegroupstagging: hostEndpoint,
        // resourcegroupstaggingapi: hostEndpoint,
        // robomaker: hostEndpoint,
        route53: LOCALSTACK_ENDPOINT,
        route53domains: LOCALSTACK_ENDPOINT,
        route53recoverycontrolconfig: LOCALSTACK_ENDPOINT,
        route53recoveryreadiness: LOCALSTACK_ENDPOINT,
        route53resolver: LOCALSTACK_ENDPOINT,
        s3: LOCALSTACK_ENDPOINT,
        // s3control: hostEndpoint,
        // s3outposts: hostEndpoint,
        sagemaker: LOCALSTACK_ENDPOINT,
        // sagemakeredgemanager: hostEndpoint,
        // sagemakerfeaturestoreruntime: hostEndpoint,
        // sagemakerruntime: hostEndpoint,
        // savingsplans: hostEndpoint,
        // schemas: hostEndpoint,
        // sdb: hostEndpoint,
        secretsmanager: LOCALSTACK_ENDPOINT,
        // securityhub: hostEndpoint,
        // serverlessapplicationrepository: hostEndpoint,
        // serverlessapprepo: hostEndpoint,
        // serverlessrepo: hostEndpoint,
        // servicecatalog: hostEndpoint,
        // servicediscovery: hostEndpoint,
        // servicequotas: hostEndpoint,
        ses: LOCALSTACK_ENDPOINT,
        // sesv2: hostEndpoint,
        // sfn: hostEndpoint,
        // shield: hostEndpoint,
        // signer: hostEndpoint,
        // simpledb: hostEndpoint,
        // sms: hostEndpoint,
        // snowball: hostEndpoint,
        sns: LOCALSTACK_ENDPOINT,
        sqs: LOCALSTACK_ENDPOINT,
        ssm: LOCALSTACK_ENDPOINT,
        // ssmcontacts: hostEndpoint,
        // ssmincidents: hostEndpoint,
        // sso: hostEndpoint,
        // ssoadmin: hostEndpoint,
        // ssooidc: hostEndpoint,
        stepfunctions: LOCALSTACK_ENDPOINT,
        // storagegateway: hostEndpoint,
        sts: LOCALSTACK_ENDPOINT,
        // support: hostEndpoint,
        // swf: hostEndpoint,
        // synthetics: hostEndpoint,
        // textract: hostEndpoint,
        timestreamquery: LOCALSTACK_ENDPOINT,
        timestreamwrite: LOCALSTACK_ENDPOINT,
        // transcribe: hostEndpoint,
        // transcribeservice: hostEndpoint,
        // transcribestreaming: hostEndpoint,
        // transcribestreamingservice: hostEndpoint,
        transfer: LOCALSTACK_ENDPOINT,
        // translate: hostEndpoint,
        // waf: hostEndpoint,
        // wafregional: hostEndpoint,
        // wafv2: hostEndpoint,
        // wellarchitected: hostEndpoint,
        // workdocs: hostEndpoint,
        // worklink: hostEndpoint,
        // workmail: hostEndpoint,
        // workmailmessageflow: hostEndpoint,
        // workspaces: hostEndpoint,
        xray: LOCALSTACK_ENDPOINT
    }],
});